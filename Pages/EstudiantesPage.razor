@page "/Estudiantes"
@page "/Estudiantes/{EstudianteId:int}"

@using Ejercicio1_3_2020.BLL
@using Ejercicio1_3_2020.Models


@inject IToastService Toast

<EditForm Model="estudiante" OnValidSubmit="Guardar">
    <DataAnnotationsValidator/>
    <div class="card">
        <div class="card-heard">
            <h3>Registro de Estudiantes</h3>
        </div>

        <div class="card-body">
            <form>
                @*EstudianteId*@
                <div class="form-row align-items-center">
                    <div class="col">
                        <div class="form-group">
                            <label>EstudianteId</label>
                            <div class="input-group">
                                <InputNumber @bind-Value="estudiante.EstudianteId" class="form-control col-4"/>
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @*Nombres*@
                <div class="form-group">
                    <label>Nombres</label>
                    <InputText @bind-Value="estudiante.Nombres" class="form-control col-4" />
                    <ValidationMessage For="@(() => estudiante.Nombres)" />
                </div>

                @*Semestre*@
                <div class="form-group">
                    <label>Semestre</label>
                    <InputNumber @bind-Value="estudiante.Semestre" class="form-control col-4" />
                    <ValidationMessage For="@(() => estudiante.Semestre)" />
                </div>

            </form>
        </div>
    </div>

    <div class="card-footer">
        <div class="form-group text-center" display: inline-block>
            <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
            <button type="submit" class="btn btn-lg btn-success">Guardar</button>
            <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
        </div>
    </div>
</EditForm>

@code{

    [Parameter]
    public int EstudianteId { get; set; }

    private Estudiantes estudiante= new Estudiantes();

    protected override void OnInitialized()
    {
            Nuevo();
            Buscar();
    } 

    public void Nuevo()
    {
        estudiante= new Estudiantes();
    }

    private void Buscar()
    {
       
        if(estudiante.EstudianteId>0)
        {
            var encontrado = EstudiantesBll.Buscar(estudiante.EstudianteId);

            if(encontrado != null)
                this.estudiante= encontrado;
            else
                Toast.ShowWarning("No encontrado");
        }
    }

    private void Guardar()
    {
        bool guardo;

        guardo = EstudiantesBll.Guardar(estudiante);

        if(guardo)
        {
            
            Toast.ShowSuccess("Guardado Correctamente");
            Nuevo();

        }
        else
            Toast.ShowError("No fue posible guardar");
    }

    public void Eliminar()
    {
        bool elimino;

        elimino= EstudiantesBll.Eliminar(estudiante.EstudianteId);

        if(elimino)
        {
            Nuevo();
            Toast.ShowSuccess("Eliminado Correctamente");

        }
        else
            Toast.ShowError("No fue posible eliminar");
    }
}



   